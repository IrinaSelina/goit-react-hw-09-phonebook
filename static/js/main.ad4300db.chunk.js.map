{"version":3,"sources":["routes.js","redux/auth/auth-selectors.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Navigation.js","Components/AuthNav.js","Components/UserMenu/UserMenu.js","Components/NavBar.js","App.js","redux/form/form-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/form/form-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["state","auth","user","email","isLogin","PrivateRoute","Component","component","redirectTo","routeProps","isAuthenticated","useSelector","selectors","render","props","to","PublicRoute","restricted","Navigation","exact","className","AuthNav","UserMenu","dispatch","useDispatch","Button","onClick","operations","logOut","type","useStyles","makeStyles","theme","root","flexGrow","menu","justifyContent","NavBar","classes","AppBar","position","Toolbar","color","HomeView","lazy","LoginView","ContactsView","RegisterView","App","useEffect","authOperations","getCurrentUser","fallback","path","Routs","fetchContactsSuccess","actions","fetchContactsRequest","addContactSuccess","fetchContactsError","addContactRequest","deleteContactSuccess","addContactError","deleteContactRequest","addFilter","deleteContactError","items","createReducer","payload","filter","id","combineReducers","registerSuccess","registerRequest","registerError","loginSuccess","loginRequest","loginError","logoutSuccess","logoutRequest","logoutError","getCurrentUserSuccess","getCurrentUserRequest","getCurrentUserError","initialUserState","name","_","token","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","roodReducer","persistReducer","authReducer","contacts","formReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","createAction","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","massage","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.ad4300db.chunk.js","sourcesContent":["export default {\r\n  home: \"/\",\r\n  register: \"/register\",\r\n  login: \"/login\",\r\n  contacts: \"/contacts\",\r\n};\r\n","const getUser = (state) => state.auth.user;\r\nconst getEmail = (state) => state.auth.user.email;\r\nconst isAuthenticated = (state) => state.auth.isLogin;\r\n\r\nexport default {\r\n  getUser,\r\n  getEmail,\r\n  isAuthenticated,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(selectors.isAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.isAuthenticated(state),\r\n// });\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  const isAuthenticated = useSelector(selectors.isAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.isAuthenticated(state),\r\n// });\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isAuthenticated = useSelector(selectors.isAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className=\"link\">\r\n        Главная\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink to=\"/contacts\" exact className=\"link\">\r\n          Контакты пользователя\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.isAuthenticated(state),\r\n// });\r\n// Navigation.propTypes = {\r\n//   isAuthenticated: PropTypes.bool.isRequired,\r\n// };\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact>\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact>\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport selectors from \"../../redux/auth/auth-selectors\";\r\nimport operations from \"../../redux/auth/auth-operations\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst UserMenu = () => {\r\n  const email = useSelector(selectors.getEmail);\r\n  const dispatch = useDispatch();\r\n  const logOut = () => {\r\n    dispatch(operations.logOut());\r\n  };\r\n  return (\r\n    <div>\r\n      <span>Welcome, {email}</span>\r\n      <Button onClick={logOut} type=\"button\">\r\n        <ExitToAppIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport selectors from \"../redux/auth/auth-selectors\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menu: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\n// const AppBar = ({ isAuthenticated }) => (\r\n//   <header>\r\n//     <Navigation />\r\n//     {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//   </header>\r\n// );\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: selectors.isAuthenticated(state),\r\n// });\r\n// AppBar.propTypes = {\r\n//   isAuthenticated: PropTypes.bool.isRequired,\r\n// };\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const isAuthenticated = useSelector(selectors.isAuthenticated);\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.menu} color=\"white\">\r\n          <Navigation color=\"inherit\" />\r\n          {isAuthenticated ? (\r\n            <UserMenu color=\"inherit\" />\r\n          ) : (\r\n            <AuthNav color=\"inherit\" />\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: selectors.isAuthenticated(state),\r\n// });\r\n// NavBar.propTypes = {\r\n//   isAuthenticated: PropTypes.bool.isRequired,\r\n// };\r\nexport default NavBar;\r\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport Routs from \"./routes\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PublicRoute from \"./Components/PublicRoute\";\n\nimport NavBar from \"./Components/NavBar\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView.js\"));\nconst LoginView = lazy(() => import(\"./views/LoginView.js\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView.js\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView.js\"));\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n  return (\n    <>\n      <NavBar />\n      <Suspense fallback={<p>Загружаем...</p>}>\n        <Switch>\n          <PublicRoute exact path={Routs.home} component={HomeView} />\n          <PublicRoute\n            path={Routs.register}\n            component={RegisterView}\n            redirectTo={Routs.contacts}\n            restricted\n          />\n          <PublicRoute\n            path={Routs.login}\n            component={LoginView}\n            redirectTo={Routs.contacts}\n            restricted\n          />\n          <PrivateRoute\n            path={Routs.contacts}\n            component={ContactsView}\n            redirectTo={Routs.login}\n          />\n          <Route component={HomeView} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./form-actions\";\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  addFilter,\r\n} = actions;\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [addFilter]: (state, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\nconst initialUserState = {\r\n  name: null,\r\n  email: null,\r\n};\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\nconst isLogin = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLogin,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport formReducer from \"./form/form-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst roodReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: formReducer,\r\n\r\n  // contacts: persistReducer(persistConfig, formReducer),\r\n});\r\n// const persistedReducer = persistReducer(persistConfig, roodReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: roodReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import \"modern-normalize/modern-normalize.css\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\nconst fetchContactsRequest = createAction(\"contact/fetchItemsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contact/fetchItemsSuccess\");\r\nconst fetchContactsError = createAction(\"contact/fetchItemsError\");\r\nconst addContactRequest = createAction(\"contact/addItemRequest\");\r\nconst addContactSuccess = createAction(\"contact/addItemSuccess\");\r\nconst addContactError = createAction(\"contact/addItemError\");\r\nconst deleteContactRequest = createAction(\"contact/deleteItemRequest\");\r\nconst deleteContactSuccess = createAction(\"contact/deleteItemSuccess\");\r\nconst deleteContactError = createAction(\"contact/deleteItemError\");\r\nconst addFilter = createAction(\"contacts/Filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./auth-actions\";\r\nconst {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} = actions;\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.massage));\r\n  }\r\n};\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.massage));\r\n  }\r\n};\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.massage));\r\n  }\r\n};\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    // token.set(response.data.token);\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.massage));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}