{"version":3,"sources":["Components/Section/Section.js","../node_modules/@material-ui/icons/Delete.js","redux/form/form-operations.js","redux/form/contacts-selectors.js","Components/Form/Form.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","../node_modules/@material-ui/core/esm/Container/Container.js","views/ContactsView.js"],"names":["Section","children","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","fetchContactsRequest","actions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","dispatch","a","axios","get","data","message","name","number","items","post","then","catch","error","contactId","delete","getFilter","state","contacts","filter","getAllItems","getVisibleContacts","createSelector","toLowerCase","includes","InputForm","useSelector","selectors","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","some","contact","alert","formOperations","FormGroup","InputLabel","htmlFor","Input","id","type","pattern","title","required","onChange","currentTarget","Button","variant","color","size","Card","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","CardContent","_props$component","component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","marginLeft","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","concat","capitalize","theme","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock","useStyles","makeStyles","media","paddingTop","expand","transform","transition","transitions","create","duration","shortest","fontSize","expandOpen","ContactList","map","onClick","onDelete","Filter","noValidate","autoComplete","label","formActions","addFilter","target","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","_defineProperty","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","ContactsView","useEffect"],"mappings":"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","file":"static/js/4.e54d4b92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ children }) => <section>{children}</section>;\r\nexport default Section;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import axios from \"axios\";\r\nimport actions from \"./form-actions\";\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} = actions;\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n  // axios\r\n  //   .get(\"/contacts\")\r\n  //   .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n  //   .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const items = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", items)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getAllItems = (state) => state.contacts.items;\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getAllItems],\r\n  (filter, contacts) =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nexport default {\r\n  getFilter,\r\n  getAllItems,\r\n  getVisibleContacts,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport formOperations from \"../../redux/form/form-operations\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\nimport \"./Form.css\";\r\nconst InputForm = () => {\r\n  const contacts = useSelector(selectors.getAllItems);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const reset = () => {\r\n    setNumber(\"\");\r\n    setName(\"\");\r\n  };\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    contacts.some(\r\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n    )\r\n      ? alert(`${name} is already in contacts.`)\r\n      : dispatch(formOperations.addContact(name, number));\r\n    reset();\r\n  };\r\n  return (\r\n    <form onSubmit={onHandleSubmit}>\r\n      <FormGroup>\r\n        <InputLabel htmlFor=\"name\">\r\n          Name\r\n          <Input\r\n            id=\"name\"\r\n            aria-describedby=\"my-helper-text\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChangeName}\r\n            value={name}\r\n          />\r\n        </InputLabel>\r\n\r\n        <InputLabel htmlFor=\"number\">\r\n          Number\r\n          <Input\r\n            id=\"number\"\r\n            aria-describedby=\"my-helper-text\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChangeNumber}\r\n            value={number}\r\n          />\r\n        </InputLabel>\r\n        <Button variant=\"contained\" type=\"submit\" color=\"primary\" size=\"small\">\r\n          Add contacts\r\n        </Button>\r\n      </FormGroup>\r\n    </form>\r\n  );\r\n};\r\n\r\n// class InputForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleChange = (e) => {\r\n//     this.setState({\r\n//       [e.currentTarget.name]: e.currentTarget.value,\r\n//     });\r\n//   };\r\n//   reset = () => {\r\n//     this.setState({\r\n//       name: \"\",\r\n//       number: \"\",\r\n//     });\r\n//   };\r\n//   handelSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const { name, number } = this.state;\r\n//     const { contacts, onSubmit } = this.props;\r\n\r\n//     contacts.some(\r\n//       (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n//     )\r\n//       ? alert(`${name} is already in contacts.`)\r\n//       : onSubmit(name, number);\r\n\r\n//     this.reset();\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form onSubmit={this.handelSubmit}>\r\n//         <FormGroup>\r\n//           <InputLabel htmlFor=\"name\">\r\n//             Name\r\n//             <Input\r\n//               id=\"name\"\r\n//               aria-describedby=\"my-helper-text\"\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//               required\r\n//               onChange={this.handleChange}\r\n//               value={name}\r\n//             />\r\n//           </InputLabel>\r\n\r\n//           <InputLabel htmlFor=\"number\">\r\n//             Number\r\n//             <Input\r\n//               id=\"number\"\r\n//               aria-describedby=\"my-helper-text\"\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//               onChange={this.handleChange}\r\n//               value={number}\r\n//             />\r\n//           </InputLabel>\r\n//           <Button\r\n//             variant=\"contained\"\r\n//             type=\"submit\"\r\n//             color=\"primary\"\r\n//             size=\"small\"\r\n//           >\r\n//             Add contacts\r\n//           </Button>\r\n//         </FormGroup>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: selectors.getAllItems(state),\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (name, number) => dispatch(formOperations.addContact(name, number)),\r\n// });\r\n\r\nexport default InputForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { AccessAlarm, ThreeDRotation } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport formOperations from \"../../redux/form/form-operations\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\nimport \"./ContactList.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: 10,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    textAlign: \"left\",\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\nconst ContactList = () => {\r\n  const classes = useStyles();\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDelete = (id) => {\r\n    dispatch(formOperations.deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Card key={id} className={classes.root}>\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.title}\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              className={classes.title}\r\n            >\r\n              {number}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              <DeleteIcon />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport formActions from \"../../redux/form/form-actions\";\r\nimport formOperations from \"../../redux/form/form-operations\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport \"./Filter.css\";\r\nimport selectors from \"../../redux/form/contacts-selectors\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleChange = (e) => dispatch(formActions.addFilter(e.target.value));\r\n\r\n  return (\r\n    <div>\r\n      <h3> Find contact dy name </h3>\r\n      <form noValidate autoComplete=\"off\">\r\n        <FormGroup>\r\n          <InputLabel htmlFor=\"Filter contacts by name\">\r\n            <Input\r\n              id=\"filter\"\r\n              label=\"Find contact\"\r\n              aria-describedby=\"my-helper-text\"\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              onChange={onHandleChange}\r\n              value={value}\r\n            />\r\n          </InputLabel>\r\n        </FormGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React, { useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport formOperations from \"../redux/form/form-operations\";\r\nimport formActions from \"../redux/form/form-actions\";\r\nimport Section from \"../Components/Section\";\r\nimport Form from \"../Components/Form\";\r\nimport ContactList from \"../Components/ContactList\";\r\nimport Filter from \"../Components/Filter\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(formOperations.fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <div className=\"container\">\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n        </div>\r\n        <div className=\"container\">\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n        </div>\r\n\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n// class ContactsView extends Component {\r\n//   componentDidMount() {\r\n//     this.props.fetchContacts();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <Container>\r\n//         <Section>\r\n//           <div className=\"container\">\r\n//             <h1>Phonebook</h1>\r\n//             <Form />\r\n//           </div>\r\n//           <div className=\"container\">\r\n//             <h2>Contacts</h2>\r\n//             <Filter />\r\n//           </div>\r\n\r\n//           <ContactList />\r\n//         </Section>\r\n//       </Container>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   // onSubmit: (filter) => dispatch(formActions.addFilter(filter)),\r\n//   fetchContacts: () => dispatch(formOperations.fetchContacts()),\r\n// });\r\nexport default ContactsView;\r\n"],"sourceRoot":""}